name: Continuous Integration for PxAPI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  static_checks:
    name: Static checks
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install Python dependencies
        run: pip install black flake8
      - name: Run black and flake
        uses: wearerequired/lint-action@v1
        with:
          black: true
          flake8: true
      - name: Run isort
        uses: jamescurtin/isort-action@master
        with:
          requirementsFiles: "requirements.txt dev_requirements.txt"

  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Checkout pxapi
        uses: actions/checkout@v2
        with:
          path: ./pxapi
      - name: Checkout pixels
        uses: actions/checkout@v2
        with:
          repository: tesselo/pixels
          ref: main
          token: ${{ secrets.ACCESS_TOKEN_PRIVATE_REPOS }}
          path: ./pixels
      - name: Install deps
        run: |
          pip install ./pixels
          pip install -r ./pxapi/requirements.txt
      - name: Test
        run: python ./pxapi/manage.py test ./pxapi/tests

  deploy:
    name: Deploy
    needs: [static_checks, test]
    runs-on: ubuntu-latest
    if: contains('refs/heads/main', github.ref)
    steps:
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Checkout pxapi
        uses: actions/checkout@v2
        with:
          path: ./pxapi
      - name: Checkout pixels
        uses: actions/checkout@v2
        with:
          repository: tesselo/pixels
          ref: main
          token: ${{ secrets.ACCESS_TOKEN_PRIVATE_REPOS }}
          path: ./pixels
      - name: Create virtualenv and install deps
        run: |
          python -m pip install --upgrade pip virtualenv
          virtualenv -p /usr/bin/python3 ./pxapi-venv
          source ./pxapi-venv/bin/activate
          pip install ./pixels
          pip install -r ./pxapi/requirements.txt
      - name: Deploy
        run: |
          source ./pxapi-venv/bin/activate
          cd ./pxapi
          zappa update dev --disable_progress
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

name: Continuous Integration for PxAPI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  static_checks:
    name: Static checks
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install Python dependencies
        run: pip install black flake8
      - name: Run black and flake
        uses: wearerequired/lint-action@v1
        with:
          black: true
          flake8: true
      - name: Run isort
        uses: jamescurtin/isort-action@master
        with:
          requirementsFiles: "requirements.txt dev_requirements.txt"

  python_dependencies:
    name: Python dependencies
    runs-on: ubuntu-latest
    steps:
     - uses: actions/cache@v2
       id: cache
       with:
         path: ./pxapi-venv
         key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
     - name: Install Python 3
       uses: actions/setup-python@v1
       with:
         python-version: 3.8
     - name: Checkout pxapi
       uses: actions/checkout@v2
       with:
         path: ./pxapi
     - name: Setup SSH keys
       run: |
         ssh-agent -a $SSH_AUTH_SOCK > /dev/null
         ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
       env:
         SSH_AUTH_SOCK: /tmp/ssh_agent.sock
     - name: Create virtualenv and install deps
       if: steps.cache.outputs.cache-hit != 'true'
       run: |
         python -m pip install --upgrade pip virtualenv
         virtualenv -p /usr/bin/python3 ./pxapi-venv
         source ./pxapi-venv/bin/activate
         pip install -r ./pxapi/requirements.txt
       env:
         SSH_AUTH_SOCK: /tmp/ssh_agent.sock

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: [python_dependencies]
    steps:
      - uses: actions/cache@v2
        id: cache
        with:
          path: ./pxapi-venv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      - name: Checkout pxapi
        uses: actions/checkout@v2
        with:
          path: ./pxapi
      - name: Test
        run: |
          source ./pxapi-venv/bin/activate
          python ./pxapi/manage.py test ./pxapi/tests

  deploy:
    name: Deploy
    needs: [python_dependencies, static_checks, test]
    runs-on: ubuntu-latest
    if: contains('refs/heads/main', github.ref)
    steps:
      - uses: actions/cache@v2
        id: cache
        with:
          path: ./pxapi-venv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      - name: Checkout pxapi
        uses: actions/checkout@v2
        with:
          path: ./pxapi
      - name: Deploy
        run: |
          source ./pxapi-venv/bin/activate
          cd ./pxapi
          zappa update dev --disable_progress
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
